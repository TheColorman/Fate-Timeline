{"version":3,"sources":["helpers/WindowDimensions.js","helpers/FloatingLineUtils.ts","helpers/FloatingEdge.js","helpers/FloatingConnectionLine.js","images/Zero.jpg","images/SN.jpg","images/UBW.jpg","images/HF.jpg","images/TMEF.jpg","images/LEMCF.jpg","images/KL.jpg","helpers/PopoverStickOnHover.jsx","helpers/createElements.js","helpers/CookieConsent.jsx","flow.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","getNodeIntersection","intersectionNode","targetNode","__rf","intersectionNodeWidth","intersectionNodeHeight","intersectionNodePosition","position","targetPosition","w","h","x2","x","y2","y","x1","y1","xx1","yy1","a","Math","abs","xx3","yy3","getEdgePosition","node","intersectionPoint","n","nx","round","ny","px","py","Position","Left","Right","Top","Bottom","getEdgeParams","source","target","sourceIntersectionPoint","targetIntersectionPoint","sourcePos","targetPos","sx","sy","tx","ty","FloatingEdge","id","arrowHeadType","markerEndId","style","nodes","useStoreState","state","markerEnd","getMarkerEnd","sourceNode","useMemo","find","dSmoothStep","getBezierPath","sourceX","sourceY","sourcePosition","targetX","targetY","getSmoothStepPath","className","d","FloatingConnectionLine","fill","stroke","strokeWidth","cx","cy","r","PopoverStickOnHover","props","handleMouseEnter","bind","handleMouseLeave","showPopover","this","delay","onMouseEnter","setTimeoutConst","setTimeout","setState","clearTimeout","component","children","placement","child","React","Children","map","cloneElement","onMouseLeave","ref","_child","Fragment","Overlay","show","shouldUpdatePosition","Popover","Component","defaultProps","FateData","FateDataRaw","handleAccept","process","REACT_APP_GOOGLE_ANALYTICS_ID","gtag","ad_storage","analytics_storage","Cookie","enableDeclineButton","onAccept","zIndex","initialElements","elements","i","FateEntry","FateImage","FateImages","ImageComponent","hasImage","src","alt","name","draggable","LinksComponent","links","link","index","title","site","href","url","rel","paddingLeft","icon","PopoverComponent","Header","time","Body","float","paddingTop","info","description","points","length","point","push","data","label","ArrowHeadType","Arrow","type","animated","createElements","edgeTypes","floating","Flow","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","setElements","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","connectionLineComponent","snapToGrid","minZoom","defaultZoom","defaultPosition","nodesDraggable","nodesConnectable","elementsSelectable","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.946e1926.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// windowDimentions\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import { Position, ArrowHeadType, Node, XYPosition } from 'react-flow-renderer';\r\n\r\n// this helper function returns the intersection point\r\n// of the line between the center of the intersectionNode and the target node\r\nfunction getNodeIntersection(intersectionNode: Node, targetNode: Node): XYPosition {\r\n  // https://math.stackexchange.com/questions/1724792/an-algorithm-for-finding-the-intersection-point-between-a-center-of-vision-and-a\r\n  const {\r\n    width: intersectionNodeWidth,\r\n    height: intersectionNodeHeight,\r\n    position: intersectionNodePosition,\r\n  } = intersectionNode.__rf;\r\n  const targetPosition = targetNode.__rf.position;\r\n\r\n  const w = intersectionNodeWidth / 2;\r\n  const h = intersectionNodeHeight / 2;\r\n\r\n  const x2 = intersectionNodePosition.x + w;\r\n  const y2 = intersectionNodePosition.y + h;\r\n  const x1 = targetPosition.x + w;\r\n  const y1 = targetPosition.y + h;\r\n\r\n  const xx1 = (x1 - x2) / (2 * w) - (y1 - y2) / (2 * h);\r\n  const yy1 = (x1 - x2) / (2 * w) + (y1 - y2) / (2 * h);\r\n  const a = 1 / (Math.abs(xx1) + Math.abs(yy1));\r\n  const xx3 = a * xx1;\r\n  const yy3 = a * yy1;\r\n  const x = w * (xx3 + yy3) + x2;\r\n  const y = h * (-xx3 + yy3) + y2;\r\n\r\n  return { x, y };\r\n}\r\n\r\n// returns the position (top,right,bottom or right) passed node compared to the intersection point\r\nfunction getEdgePosition(node: Node, intersectionPoint: XYPosition) {\r\n  const n = { ...node.__rf.position, ...node.__rf };\r\n  const nx = Math.round(n.x);\r\n  const ny = Math.round(n.y);\r\n  const px = Math.round(intersectionPoint.x);\r\n  const py = Math.round(intersectionPoint.y);\r\n\r\n  if (px <= nx + 1) {\r\n    return Position.Left;\r\n  }\r\n  if (px >= nx + n.width - 1) {\r\n    return Position.Right;\r\n  }\r\n  if (py <= ny + 1) {\r\n    return Position.Top;\r\n  }\r\n  if (py >= n.y + n.height - 1) {\r\n    return Position.Bottom;\r\n  }\r\n\r\n  return Position.Top;\r\n}\r\n\r\n// returns the parameters (sx, sy, tx, ty, sourcePos, targetPos) you need to create an edge\r\nexport function getEdgeParams(source: Node, target: Node) {\r\n  const sourceIntersectionPoint = getNodeIntersection(source, target);\r\n  const targetIntersectionPoint = getNodeIntersection(target, source);\r\n\r\n  const sourcePos = getEdgePosition(source, sourceIntersectionPoint);\r\n  const targetPos = getEdgePosition(target, targetIntersectionPoint);\r\n\r\n  return {\r\n    sx: sourceIntersectionPoint.x,\r\n    sy: sourceIntersectionPoint.y,\r\n    tx: targetIntersectionPoint.x,\r\n    ty: targetIntersectionPoint.y,\r\n    sourcePos,\r\n    targetPos,\r\n  };\r\n}\r\n\r\nexport function createElements() {\r\n  const elements = [];\r\n  const center = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\r\n\r\n  elements.push({ id: 'target', data: { label: 'Target' }, position: center });\r\n\r\n  for (let i = 0; i < 8; i++) {\r\n    const degrees = i * (360 / 8);\r\n    const radians = degrees * (Math.PI / 180);\r\n    const x = 250 * Math.cos(radians) + center.x;\r\n    const y = 250 * Math.sin(radians) + center.y;\r\n\r\n    elements.push({ id: `${i}`, data: { label: 'Source' }, position: { x, y } });\r\n\r\n    elements.push({\r\n      id: `edge-${i}`,\r\n      target: 'target',\r\n      source: `${i}`,\r\n      type: 'floating',\r\n      arrowHeadType: ArrowHeadType.Arrow,\r\n    });\r\n  }\r\n\r\n  return elements;\r\n}","import { useMemo } from 'react';\r\nimport { getMarkerEnd, useStoreState, getBezierPath, getSmoothStepPath } from 'react-flow-renderer';\r\n\r\nimport { getEdgeParams } from './FloatingLineUtils.ts';\r\n\r\nconst FloatingEdge = ({ id, source, target, arrowHeadType, markerEndId, style }) => {\r\n  const nodes = useStoreState((state) => state.nodes);\r\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\r\n\r\n  const sourceNode = useMemo(() => nodes.find((n) => n.id === source), [source, nodes]);\r\n  const targetNode = useMemo(() => nodes.find((n) => n.id === target), [target, nodes]);\r\n\r\n  if (!sourceNode || !targetNode) {\r\n    return null;\r\n  }\r\n\r\n  const { sx, sy, tx, ty, sourcePos, targetPos } = getEdgeParams(sourceNode, targetNode);\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const dBezier = getBezierPath({\r\n    sourceX: sx,\r\n    sourceY: sy,\r\n    sourcePosition: sourcePos,\r\n    targetPosition: targetPos,\r\n    targetX: tx,\r\n    targetY: ty,\r\n  });\r\n  const dSmoothStep = getSmoothStepPath({\r\n    sourceX: sx,\r\n    sourceY: sy,\r\n    sourcePosition: sourcePos,\r\n    targetPosition: targetPos,\r\n    targetX: tx,\r\n    targetY: ty,\r\n  });\r\n\r\n  return (\r\n    <g className=\"react-flow__connection\">\r\n      <path id={id} className=\"react-flow__edge-path\" d={dSmoothStep} markerEnd={markerEnd} style={style} />\r\n    </g>\r\n  );\r\n};\r\n\r\nexport default FloatingEdge;","import { getBezierPath, getSmoothStepPath } from \"react-flow-renderer\";\r\n\r\nimport { getEdgeParams } from \"./FloatingLineUtils.ts\";\r\n\r\nconst FloatingConnectionLine = ({\r\n    targetX,\r\n    targetY,\r\n    sourcePosition,\r\n    targetPosition,\r\n    sourceNode,\r\n}) => {\r\n    if (!sourceNode) {\r\n        return null;\r\n    }\r\n\r\n    const targetNode = {\r\n        id: \"connection-target\",\r\n        __rf: { width: 1, height: 1, position: { x: targetX, y: targetY } },\r\n    };\r\n\r\n    const { sx, sy } = getEdgeParams(sourceNode, targetNode);\r\n    // eslint-disable-next-line no-unused-vars\r\n    const dBezier = getBezierPath({\r\n        sourceX: sx,\r\n        sourceY: sy,\r\n        sourcePosition,\r\n        targetPosition,\r\n        targetX,\r\n        targetY,\r\n    });\r\n    const dSmoothStep = getSmoothStepPath({\r\n        sourceX: sx,\r\n        sourceY: sy,\r\n        sourcePosition,\r\n        targetPosition,\r\n        targetX,\r\n        targetY,\r\n    });\r\n\r\n    return (\r\n        <g>\r\n            <path\r\n                fill=\"none\"\r\n                stroke=\"#222\"\r\n                strokeWidth={1.5}\r\n                className=\"animated\"\r\n                d={dSmoothStep}\r\n            />\r\n            <circle\r\n                cx={targetX}\r\n                cy={targetY}\r\n                fill=\"#fff\"\r\n                r={3}\r\n                stroke=\"#222\"\r\n                strokeWidth={1.5}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nexport default FloatingConnectionLine;\r\n","export default __webpack_public_path__ + \"static/media/Zero.650d05c3.jpg\";","export default __webpack_public_path__ + \"static/media/SN.cac80d16.jpg\";","export default __webpack_public_path__ + \"static/media/UBW.ed2bd810.jpg\";","export default __webpack_public_path__ + \"static/media/HF.4db29ef8.jpg\";","export default __webpack_public_path__ + \"static/media/TMEF.f58173ed.jpg\";","export default __webpack_public_path__ + \"static/media/LEMCF.0a6c449b.jpg\";","export default __webpack_public_path__ + \"static/media/KL.1ff1af43.jpg\";","/*\r\n* Usage:\r\n* <PopoverStickOnHover\r\n*    component={<div>Holy guacamole! I'm Sticky.</div>}\r\n*    placement=\"top\"\r\n*    onMouseEnter={() => { }}\r\n*    delay={200}\r\n* >\r\n*   <div>Show the sticky tooltip</div>\r\n* </PopoverStickOnHover>\r\n*/\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Overlay, Popover } from 'react-bootstrap'\r\n\r\nexport default class PopoverStickOnHover extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this)\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this)\r\n\r\n    this.state = {\r\n      showPopover: false,\r\n    }\r\n  }\r\n\r\n  handleMouseEnter() {\r\n    const { delay, onMouseEnter } = this.props\r\n\r\n    this.setTimeoutConst = setTimeout(() => {\r\n      this.setState({ showPopover: true }, () => {\r\n        if (onMouseEnter) {\r\n          onMouseEnter()\r\n        }\r\n      })\r\n    }, delay);\r\n  }\r\n\r\n  handleMouseLeave() {\r\n    clearTimeout(this.setTimeoutConst)\r\n    this.setState({ showPopover: false })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.setTimeoutConst) {\r\n      clearTimeout(this.setTimeoutConst)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { component, children, placement } = this.props\r\n\r\n    const child = React.Children.map(children, (child) => (\r\n      React.cloneElement(child, {\r\n        onMouseEnter: this.handleMouseEnter,\r\n        onMouseLeave: this.handleMouseLeave,\r\n        ref: (node) => {\r\n          this._child = node\r\n          const { ref } = child\r\n          if (typeof ref === 'function') {\r\n            ref(node);\r\n          }\r\n        }\r\n      })\r\n    ))[0]\r\n\r\n    return(\r\n      <React.Fragment>\r\n        {child}\r\n        <Overlay\r\n          show={this.state.showPopover}\r\n          placement={placement}\r\n          target={this._child}\r\n          shouldUpdatePosition={true}\r\n        >\r\n          <Popover\r\n            onMouseEnter={() => {\r\n              this.setState({ showPopover: true })\r\n            }}\r\n            onMouseLeave={this.handleMouseLeave}\r\n            id='popover'\r\n          >\r\n            {component}\r\n          </Popover>\r\n        </Overlay>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nPopoverStickOnHover.defaultProps = {\r\n  delay: 0\r\n}\r\n\r\nPopoverStickOnHover.propTypes = {\r\n  delay: PropTypes.number,\r\n  onMouseEnter: PropTypes.func,\r\n  children: PropTypes.element.isRequired,\r\n  component: PropTypes.node.isRequired\r\n}","import React from \"react\";\r\nimport * as FateImages from \"../images/images.js\";\r\nimport * as FateDataRaw from \"../data/data.json\";\r\nimport { ArrowHeadType } from \"react-flow-renderer\";\r\nimport { Popover } from \"react-bootstrap\";\r\nimport PopoverStickOnHover from \"./PopoverStickOnHover.jsx\";\r\n\r\nconst FateData = FateDataRaw.default;\r\n\r\nconst edgeType = 'smoothstep'; // 'floating' for custom floating edges\r\nconst animated = true;\r\n\r\nexport default function createElements() {\r\n    const elements = [];\r\n    for (let i = 0; i < FateData.length; i++) {\r\n        const FateEntry = FateData[i];\r\n        const FateImage = FateImages['i_' + FateEntry.id];\r\n\r\n        // Generate image element\r\n        function ImageComponent(props) {\r\n            const hasImage = props.hasImage;\r\n            if (hasImage) {\r\n                return (\r\n                    <img\r\n                        src={FateImage}\r\n                        alt={FateEntry.name}\r\n                        draggable=\"false\"\r\n                        style={{\r\n                            width: props.width,\r\n                        }} />\r\n                );\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Icon links\r\n        function LinksComponent(props) {\r\n            if (props.links) {\r\n                return props.links.map((link, index) => {\r\n                    return (\r\n                        <a\r\n                            key={index}\r\n                            className=\"link\"\r\n                            title={link.site}\r\n                            target=\"_blank\"\r\n                            href={link.url}\r\n                            rel=\"noreferrer\"\r\n                            style={{\r\n                                paddingLeft: '10px',\r\n                            }}\r\n                        >\r\n                            <img width=\"16\" src={link.icon} alt={link.site}/>\r\n                        </a>\r\n                    );\r\n                });\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Hover popover\r\n        function PopoverComponent() {\r\n            return (\r\n                <PopoverStickOnHover\r\n                    component={\r\n                        <div>\r\n                            <Popover.Header><strong>{FateEntry.time}</strong></Popover.Header>\r\n                            <Popover.Body>\r\n                                <div>\r\n                                    <strong>{FateEntry.name}</strong>\r\n                                    <div // Icon link\r\n                                        style={{\r\n                                            float: 'right',\r\n                                        }}                                        \r\n                                    >\r\n                                        <LinksComponent links={FateEntry.links}/>\r\n                                    </div>\r\n                                    <div\r\n                                        style={{\r\n                                            paddingTop: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <p>\r\n                                            {FateEntry.info.description}\r\n                                        </p>\r\n                                        {(\r\n                                            FateEntry.info.points.length ? (\r\n                                                <ul>\r\n                                                    {(\r\n\r\n                                                        FateEntry.info.points.map((point, index) => {\r\n                                                            return (\r\n                                                                <li key={index}>{point}</li>\r\n                                                            );\r\n                                                        })\r\n                                                    )}\r\n                                                </ul>\r\n                                            ) : (\r\n                                                null\r\n                                            )\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </Popover.Body>\r\n                        </div>\r\n                    }\r\n                    placement=\"bottom\"\r\n                    onMouseEnter={() => { }}\r\n                    delay={0}\r\n                >\r\n                    <div>\r\n                        {FateEntry.name}\r\n                        <ImageComponent hasImage={!!FateImage} width=\"100%\" />\r\n                    </div>\r\n                </PopoverStickOnHover>\r\n            );\r\n        }\r\n\r\n        // Push Node\r\n        elements.push(\r\n            {\r\n            id: FateEntry.id,\r\n            data: {\r\n                label: (\r\n                        <div>\r\n                            <PopoverComponent />\r\n                        </div>\r\n                ),\r\n            },\r\n            position: FateEntry.position,\r\n            sourcePosition: 'right',\r\n            targetPosition: 'left',\r\n            \r\n        });\r\n\r\n        // Push Edge\r\n        if (FateEntry.source) {\r\n            elements.push({\r\n                id: `edge-${FateEntry.source}-${FateEntry.id}`,\r\n                target: FateEntry.id,\r\n                source: FateEntry.source,\r\n                arrowHeadType: ArrowHeadType.Arrow,\r\n                type: edgeType,\r\n                animated: animated,\r\n                style: {\r\n                    strokeWidth: \"2px\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return elements;\r\n}","import CookieConsent, { getCookieConsentValue, resetCookieConsentValue } from \"react-cookie-consent\";\r\n\r\nconst handleAccept = () => {\r\n    if (process.env.REACT_APP_GOOGLE_ANALYTICS_ID) {\r\n        window.gtag('consent', 'update', {\r\n            ad_storage: 'allowed',\r\n            analytics_storage: 'allowed',\r\n        });\r\n    }\r\n}\r\n\r\nexport default function Cookie() {\r\n    // Clear cookies if dev mode\r\n    if (process.env.NODE_ENV === 'development') { resetCookieConsentValue(); }\r\n    // Cookies enabled by default\r\n    if (process.env.REACT_APP_COOKIES_ENABLED_DEFAULT === \"true\") {\r\n        handleAccept();\r\n    } else {   \r\n        if (getCookieConsentValue() === true) { handleAccept(); }\r\n    }\r\n    return (\r\n        <CookieConsent\r\n            enableDeclineButton={process.env.REACT_APP_COOKIES_ENABLED_DEFAULT === \"false\"}\r\n            onAccept={handleAccept}\r\n            style={{\r\n                zIndex: 2000    // who tf writes a component with a zIndex of 1000?\r\n            }}\r\n        >\r\n            This website uses cookies because I want to know how many people are using it.\r\n        </CookieConsent>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport ReactFlow, {\r\n    addEdge,\r\n    Background,\r\n    ArrowHeadType,\r\n    removeElements,\r\n} from \"react-flow-renderer\";\r\n\r\nimport useWindowDimensions from \"./helpers/WindowDimensions\";\r\nimport FloatingEdge from \"./helpers/FloatingEdge\";\r\nimport FloatingConnectionLine from \"./helpers/FloatingConnectionLine.js\";\r\nimport createElements from \"./helpers/createElements.js\";\r\nimport Cookie from \"./helpers/CookieConsent\";\r\n\r\nconst initialElements = createElements();\r\n\r\nconst edgeTypes = {\r\n    floating: FloatingEdge,\r\n};\r\n\r\nconst Flow = () => {\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    const [elements, setElements] = useState(initialElements);\r\n\r\n    const onElementsRemove = (elementsToRemove) =>\r\n        setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n    const onConnect = (params) => {\r\n        setElements((els) =>\r\n            addEdge(\r\n                {\r\n                    ...params,\r\n                    type: \"floating\",\r\n                    arrowHeadType: ArrowHeadType.Arrow,\r\n                },\r\n                els\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: height, width: width }} className=\"floatingedges\">\r\n            <ReactFlow\r\n                elements={elements}\r\n                onElementsRemove={onElementsRemove}\r\n                onConnect={onConnect}\r\n                edgeTypes={edgeTypes}\r\n                connectionLineComponent={FloatingConnectionLine}\r\n                snapToGrid={true}\r\n                minZoom={0.1}\r\n                defaultZoom={1}\r\n                defaultPosition={[200, 300]}\r\n                nodesDraggable={false}\r\n                nodesConnectable={false}\r\n                elementsSelectable={true}\r\n            >\r\n                <Cookie />\r\n                <Background />\r\n            </ReactFlow>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Flow;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Flow from \"./flow\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nif (process.env.NODE_ENV !== 'production') {\r\n    require('dotenv').config();\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Flow />,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}